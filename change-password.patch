diff --git a/openstack_dashboard/api/nova.py b/openstack_dashboard/api/nova.py
index 7cede8ac9..52de7e326 100644
--- a/openstack_dashboard/api/nova.py
+++ b/openstack_dashboard/api/nova.py
@@ -863,6 +863,11 @@ def get_password(request, instance_id, private_key=None):
     return novaclient(request).servers.get_password(instance_id, private_key)
 
 
+@profiler.trace
+def change_password(request, instance_id, password=None):
+    return novaclient(request).servers.change_password(instance_id, password)
+
+
 @profiler.trace
 def instance_volume_attach(request, volume_id, instance_id, device):
     from openstack_dashboard.api import cinder
diff --git a/openstack_dashboard/dashboards/project/instances/forms.py b/openstack_dashboard/dashboards/project/instances/forms.py
index 009892d81..ba71dc2f1 100644
--- a/openstack_dashboard/dashboards/project/instances/forms.py
+++ b/openstack_dashboard/dashboards/project/instances/forms.py
@@ -180,6 +180,51 @@ class DecryptPasswordInstanceForm(forms.SelfHandlingForm):
         return True
 
 
+class ChangePasswordInstanceForm(forms.SelfHandlingForm):
+    instance_id = forms.CharField(widget=forms.HiddenInput())
+    password = forms.RegexField(
+        label=_("New Password"),
+        required=True,
+        widget=forms.PasswordInput(render_value=False),
+        regex=validators.password_validator(),
+        error_messages={'invalid': validators.password_validator_msg()})
+    confirm_password = forms.CharField(
+        label=_("Confirm Password"),
+        required=True,
+        widget=forms.PasswordInput(render_value=False))
+
+    def __init__(self, request, *args, **kwargs):
+        super(ChangePasswordInstanceForm, self).__init__(request,
+                                                         *args,
+                                                         **kwargs)
+        instance_id = kwargs.get('initial', {}).get('instance_id')
+        self.fields['instance_id'].initial = instance_id
+
+    @sensitive_variables('data', 'password')
+    def handle(self, request, data):
+        try:
+            instance = data.get('instance_id')
+            password = data.get('password') or None
+            api.nova.change_password(request, instance, password)
+            messages.success(request, _(
+                'Successfully changed password for instance %s.') % instance)
+        except Exception:
+            redirect = reverse('horizon:project:instances:index')
+            exceptions.handle(request,
+                              _("Unable to change instance password."),
+                              redirect=redirect)
+        return True
+
+    def clean(self):
+        '''Check to make sure password fields match.'''
+        cleaned_data = super(ChangePasswordInstanceForm, self).clean()
+        if 'password' in cleaned_data:
+            if cleaned_data['password'] != cleaned_data.get(
+                    'confirm_password', None):
+                raise forms.ValidationError(_('Passwords do not match.'))
+            return cleaned_data
+
+
 class AttachVolume(forms.SelfHandlingForm):
     volume = forms.ChoiceField(label=_("Volume ID"),
                                widget=forms.ThemableSelectWidget(),
diff --git a/openstack_dashboard/dashboards/project/instances/tables.py b/openstack_dashboard/dashboards/project/instances/tables.py
index 324430baf..855b708cd 100644
--- a/openstack_dashboard/dashboards/project/instances/tables.py
+++ b/openstack_dashboard/dashboards/project/instances/tables.py
@@ -631,6 +631,22 @@ class DecryptInstancePassword(tables.LinkAction):
                                             keypair_name])
 
 
+class ChangeInstancePassword(tables.LinkAction):
+    name = "changepassword"
+    verbose_name = _("Change Password")
+    classes = ("btn-change", "ajax-modal")
+    url = "horizon:project:instances:changepassword"
+
+    def allowed(self, request, instance):
+        enable = getattr(settings,
+                         'OPENSTACK_ENABLE_PASSWORD_CHANGE',
+                         False)
+        return (enable and
+                (instance.status in ACTIVE_STATES or
+                 instance.status == 'SHUTOFF') and
+                not is_deleting(instance))
+
+
 class AssociateIP(policy.PolicyTargetMixin, tables.LinkAction):
     name = "associate"
     verbose_name = _("Associate Floating IP")
@@ -975,7 +991,7 @@ def get_ips(instance):
 
         for address in addresses:
             if ('OS-EXT-IPS:type' in address and
-               address['OS-EXT-IPS:type'] == "floating"):
+                    address['OS-EXT-IPS:type'] == "floating"):
                 ip_groups[ip_group]["floating"].append(address)
             else:
                 ip_groups[ip_group]["non_floating"].append(address)
@@ -1266,6 +1282,7 @@ class InstancesTable(tables.DataTable):
                        AttachInterface, DetachInterface, EditInstance,
                        AttachVolume, DetachVolume,
                        UpdateMetadata, DecryptInstancePassword,
+                       ChangeInstancePassword,
                        EditInstanceSecurityGroups,
                        EditPortSecurityGroups,
                        ConsoleLink, LogLink,
diff --git a/openstack_dashboard/dashboards/project/instances/templates/instances/_changepassword.html b/openstack_dashboard/dashboards/project/instances/templates/instances/_changepassword.html
new file mode 100644
index 000000000..acd5ae96b
--- /dev/null
+++ b/openstack_dashboard/dashboards/project/instances/templates/instances/_changepassword.html
@@ -0,0 +1,20 @@
+{% extends "horizon/common/_modal_form.html" %}
+{% load i18n %}
+
+{% block form_id %}change_instance_password_form{% endblock %}
+
+{% block form_action %}{% url "horizon:project:instances:changepassword" instance_id %}{% endblock %}
+
+{% block modal_id %}change_instance_password_modal{% endblock %}
+{% block modal-header %}{% trans "Change Instance Password" %}{% endblock %}
+
+{% block modal-body %}
+<fieldset>
+  {% include "horizon/common/_form_fields.html" %}
+</fieldset>
+{% endblock %}
+{% block modal-footer %}
+
+<a href="{% url "horizon:project:instances:index" %}" class="btn btn-default cancel">{% trans "Cancel" %}</a>
+<input class="btn btn-primary" type="submit" id="changepassword_button" value="{% trans "Change Password" %}" />
+{% endblock %}
\ No newline at end of file
diff --git a/openstack_dashboard/dashboards/project/instances/templates/instances/changepassword.html b/openstack_dashboard/dashboards/project/instances/templates/instances/changepassword.html
new file mode 100644
index 000000000..e992accbc
--- /dev/null
+++ b/openstack_dashboard/dashboards/project/instances/templates/instances/changepassword.html
@@ -0,0 +1,7 @@
+{% extends "base.html" %}
+{% load i18n %}
+{% block title %}{% trans "Change Instance Password" %}{% endblock %}
+
+{% block main %}
+{% include "project/instances/_changepassword.html" %}
+{% endblock %}
\ No newline at end of file
diff --git a/openstack_dashboard/dashboards/project/instances/urls.py b/openstack_dashboard/dashboards/project/instances/urls.py
index 4deb8055d..0adf7dc7f 100644
--- a/openstack_dashboard/dashboards/project/instances/urls.py
+++ b/openstack_dashboard/dashboards/project/instances/urls.py
@@ -41,6 +41,8 @@ urlpatterns = [
     url(INSTANCES % 'resize', views.ResizeView.as_view(), name='resize'),
     url(INSTANCES_KEYPAIR % 'decryptpassword',
         views.DecryptPasswordView.as_view(), name='decryptpassword'),
+    url(INSTANCES % 'changepassword',
+        views.ChangePasswordView.as_view(), name='changepassword'),
     url(INSTANCES % 'disassociate',
         views.DisassociateView.as_view(), name='disassociate'),
     url(INSTANCES % 'attach_interface',
diff --git a/openstack_dashboard/dashboards/project/instances/views.py b/openstack_dashboard/dashboards/project/instances/views.py
index 8ee4c2bb7..a3d551d58 100644
--- a/openstack_dashboard/dashboards/project/instances/views.py
+++ b/openstack_dashboard/dashboards/project/instances/views.py
@@ -394,6 +394,21 @@ class DecryptPasswordView(forms.ModalFormView):
                 'keypair_name': self.kwargs['keypair_name']}
 
 
+class ChangePasswordView(forms.ModalFormView):
+    form_class = project_forms.ChangePasswordInstanceForm
+    template_name = 'project/instances/changepassword.html'
+    success_url = reverse_lazy('horizon:project:instances:index')
+    page_title = _("Change Instance Password")
+
+    def get_context_data(self, **kwargs):
+        context = super(ChangePasswordView, self).get_context_data(**kwargs)
+        context['instance_id'] = self.kwargs['instance_id']
+        return context
+
+    def get_initial(self):
+        return {'instance_id': self.kwargs['instance_id']}
+
+
 class DisassociateView(forms.ModalFormView):
     form_class = project_forms.Disassociate
     template_name = 'project/instances/disassociate.html'
diff --git a/openstack_dashboard/local/local_settings.py.example b/openstack_dashboard/local/local_settings.py.example
index 5d56590a6..97c9034a7 100644
--- a/openstack_dashboard/local/local_settings.py.example
+++ b/openstack_dashboard/local/local_settings.py.example
@@ -272,6 +272,10 @@ OPENSTACK_KEYSTONE_BACKEND = {
 # allowing Admin session password retrieval/decryption.
 #OPENSTACK_ENABLE_PASSWORD_RETRIEVE = False
 
+# Setting this to True, will add a new "Change Password" action on instance,
+# allowing Admin session password changing.
+OPENSTACK_ENABLE_PASSWORD_CHANGE = True
+
 # The Launch Instance user experience has been significantly enhanced.
 # You can choose whether to enable the new launch instance experience,
 # the legacy experience, or both. The legacy experience will be removed
